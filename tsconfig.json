{
  "compilerOptions": {
    /* Language and Environment */
    "target": "es2022",                                /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "lib": ["es2022", "dom", "dom.iterable"],          /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "jsx": "react-jsx",                                /* Specify what JSX code is generated. */

    /* Modules */
    "module": "commonjs",                              /* Specify what module code is generated. */
    "rootDir": "src",                                  /* Specify the root folder within your source files. */

    /* Emit */
    "declaration": true,                               /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    "declarationMap": true,                            /* Create sourcemaps for d.ts files. */
    "sourceMap": true,                                 /* Create source map files for emitted JavaScript files. */
    "outDir": "dist",                                  /* Specify an output folder for all emitted files. */

    /* Interop Constraints */
    "verbatimModuleSyntax": true,                      /* Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file's format based on the 'module' setting. */
    "esModuleInterop": true,                           /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,          /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true,                                       /* Enable all strict type-checking options. */
    "noImplicitAny": true,                            /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true,                         /* When type checking, take into account 'null' and 'undefined'. */
    "noUnusedLocals": true,                           /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": true,                       /* Raise an error when a function parameter isn't read. */
    // "exactOptionalPropertyTypes": true,               /* Interpret optional property types as written, rather than adding 'undefined'. */
    "noImplicitReturns": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough cases in switch statements. */
    "noUncheckedIndexedAccess": true,                 /* Add 'undefined' to a type when accessed using an index. */
    "noImplicitOverride": true,                       /* Ensure overriding members in derived classes are marked with an override modifier. */

    /* Completeness */
    "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */
  }
}
